{
  "paths": {
    "/proposals": {
      "get": {
        "deprecated": false,
        "description": "Find all the proposals's records",
        "responses": {
          "200": {
            "description": "Retrieve proposals document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Proposals"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Proposals"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new proposals record",
        "responses": {
          "200": {
            "description": "Retrieve proposals document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Proposals"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Proposals"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProposals"
              }
            }
          }
        }
      }
    },
    "/proposals/count": {
      "get": {
        "deprecated": false,
        "description": "Retrieve the numver of proposals documents",
        "responses": {
          "200": {
            "description": "Retrieve proposals document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Proposals"
        ],
        "parameters": []
      }
    },
    "/proposals/{id}": {
      "get": {
        "deprecated": false,
        "description": "Find one proposals record",
        "responses": {
          "200": {
            "description": "Retrieve proposals document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Proposals"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Proposals"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update a single proposals record",
        "responses": {
          "200": {
            "description": "Retrieve proposals document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Proposals"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Proposals"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProposals"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a single proposals record",
        "responses": {
          "200": {
            "description": "deletes a single proposals based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Proposals"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Proposals": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "user": {
            "required": [
              "id",
              "login",
              "email"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "login": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "avatar_url": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "mainfield": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "bio": {
                "type": "string"
              },
              "typeofwork": {
                "type": "string"
              },
              "rem1": {
                "type": "string"
              },
              "rem2": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "devise": {
                "type": "string"
              },
              "education": {
                "type": "object"
              },
              "availaible": {
                "type": "boolean"
              },
              "realisation": {
                "type": "object"
              },
              "tags": {
                "type": "object"
              },
              "darkmode": {
                "type": "boolean"
              },
              "user_login": {
                "type": "string"
              },
              "socialmedia": {
                "type": "object"
              },
              "personal": {
                "type": "object"
              },
              "phone": {
                "type": "string"
              },
              "birthyear": {
                "type": "integer"
              },
              "gender": {
                "type": "string"
              },
              "ttttt": {
                "type": "string"
              }
            }
          },
          "job": {
            "required": [
              "id",
              "proposal_accepted",
              "postbyadmin"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "contractant": {
                "type": "string"
              },
              "category": {
                "type": "string"
              },
              "souscategories": {
                "type": "object"
              },
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "place": {
                "type": "string"
              },
              "price": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              },
              "limitdate": {
                "type": "string"
              },
              "realisation_date": {
                "type": "string"
              },
              "experience": {
                "type": "string"
              },
              "valided": {
                "type": "boolean"
              },
              "taches": {
                "type": "object"
              },
              "freelancers": {
                "type": "object"
              },
              "typeofwork": {
                "type": "string"
              },
              "proposal_accepted": {
                "type": "boolean"
              },
              "postbyadmin": {
                "type": "boolean"
              },
              "canseeit": {
                "type": "object"
              },
              "status": {
                "type": "string"
              },
              "contact": {
                "type": "string"
              },
              "winner": {
                "type": "string"
              }
            }
          },
          "composition": {
            "type": "string"
          },
          "team": {
            "type": "object"
          },
          "price": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "taches": {
            "type": "object"
          },
          "limitdate": {
            "type": "string"
          },
          "accepted": {
            "type": "boolean"
          },
          "step": {
            "type": "string"
          },
          "datestart": {
            "type": "string"
          },
          "datefinish": {
            "type": "string"
          },
          "rejected": {
            "type": "boolean",
            "default": false
          },
          "paid": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "NewProposals": {
        "properties": {
          "user": {
            "type": "string"
          },
          "job": {
            "type": "string"
          },
          "composition": {
            "type": "string"
          },
          "team": {
            "type": "object"
          },
          "price": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "taches": {
            "type": "object"
          },
          "limitdate": {
            "type": "string"
          },
          "accepted": {
            "type": "boolean"
          },
          "step": {
            "type": "string"
          },
          "datestart": {
            "type": "string"
          },
          "datefinish": {
            "type": "string"
          },
          "rejected": {
            "type": "boolean",
            "default": false
          },
          "paid": {
            "type": "boolean",
            "default": false
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Proposals"
    }
  ]
}